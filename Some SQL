SELECT *
FROM   (
        SELECT WF_NAME, FILENAME_OUT, SUM(CDR_COUNT) AS RECORDS_DIST,
               (
                SELECT SUM(EVENT_COUNT)
                FROM ( SELECT WF_NAME,
                              FILENAME,
                              EVENT_COUNT
                       FROM   EVENT_DIST_AUDIT
                       WHERE      WF_NAME LIKE 'CCMS%'
                              AND EVENT_DESCRIPTION = 'OUTBOUND'
                              AND TRANSFER_TIMESTAMP >= SYSDATE - INTERVAL '270' MINUTE                          
                              AND TRANSFER_TIMESTAMP <= SYSDATE
                              AND NVL(SUBSTR(FILENAME, DECODE(INSTR(FILENAME, '/')+1, 1, 99999, INSTR(FILENAME, '/')+1), LENGTH(FILENAME)), '0') = 0
                     ) B
                WHERE  B.FILENAME = A.FILENAME_OUT
                GROUP BY WF_NAME, FILENAME
               ) RECORDS_OUTBOUND,
                (
                SELECT SUM(EVENT_COUNT)
                FROM ( SELECT WF_NAME,
                              CASE WHEN
                              SUBSTR(FILENAME, 0, INSTR(FILENAME, '/')-1) IS NOT NULL
                              THEN SUBSTR(FILENAME, 0, INSTR(FILENAME, '/')-1)
                              ELSE FILENAME
                              END FILENAME,
                              EVENT_COUNT
                       FROM   EVENT_DIST_AUDIT
                       WHERE      WF_NAME LIKE 'CCMS%'
                              AND EVENT_DESCRIPTION = 'ACKNOWLEDGED'
                              AND TRANSFER_TIMESTAMP >= SYSDATE - INTERVAL '270' MINUTE                    
                              AND TRANSFER_TIMESTAMP <= SYSDATE
                     ) B
                WHERE B.FILENAME = A.FILENAME_OUT
                GROUP BY WF_NAME, FILENAME
               ) RECORDS_ACKNOWLEDGED
        FROM  PROC_OUT_AUDIT A
        WHERE     WF_NAME IN ( 'CONCENTRATED', 'DEACTIVATION', 'DEL_DEACTIVATION', 'RATE_PLAN_CHANGE', 'SMART_CAMP_REPORTS', 'SMART_CAMP_REWARDS', 
                               'DATA_SUBSCRIPTION', 'DATA_TRAFFIC', 'OCS_CCN', 'POP_SMS_VOICE', 'NGIN_DATA_SUBSCRIPTION', 'NGIN_DATA_TRAFFIC'
                            )
              AND TIMESTAMP >= SYSDATE - INTERVAL '270' MINUTE
              -- DEFINE TRANSFER TIMESTAMP RANGE. IT CAN BE ONE DAY OR MORE.
              AND TIMESTAMP <= SYSDATE - INTERVAL '30' MINUTE
        GROUP BY WF_NAME, FILENAME_OUT
       )
WHERE  RECORDS_OUTBOUND != NVL(RECORDS_ACKNOWLEDGED,0)

SELECT * FROM   (         SELECT WF_NAME, FILENAME_OUT, SUM(CDR_COUNT) AS RECORDS_DIST,                (                 SELECT SUM(EVENT_COUNT)                 FROM ( SELECT WF_NAME,                               FILENAME,                               EVENT_COUNT                        FROM   EVENT_DIST_AUDIT                        WHERE     (   WF_NAME LIKE 'CCMS%' OR WF_NAME LIKE 'RECO%')                             AND EVENT_DESCRIPTION = 'OUTBOUND'                               AND TRANSFER_TIMESTAMP >= SYSDATE - INTERVAL '750' MINUTE                               AND TRANSFER_TIMESTAMP <= SYSDATE                               AND NVL(SUBSTR(FILENAME, DECODE(INSTR(FILENAME, '/')+1, 1, 99999, INSTR(FILENAME, '/')+1), LENGTH(FILENAME)), '0') = 0                      ) B                 WHERE  B.FILENAME = A.FILENAME_OUT                 GROUP BY WF_NAME, FILENAME                ) RECORDS_OUTBOUND         FROM  PROC_OUT_AUDIT A         WHERE     WF_NAME IN ( 'CONCENTRATED', 'DEACTIVATION', 'DEL_DEACTIVATION', 'RATE_PLAN_CHANGE', 'SMART_CAMP_REPORTS', 'SMART_CAMP_REWARDS',                                 'DATA_SUBSCRIPTION', 'DATA_TRAFFIC', 'OCS_CCN', 'POP_SMS_VOICE', 'NGIN_DATA_SUBSCRIPTION', 'NGIN_DATA_TRAFFIC' , 'RECO_Proc'                            )               AND TIMESTAMP >= SYSDATE - INTERVAL '750' MINUTE                             AND TIMESTAMP <= SYSDATE - INTERVAL '30' MINUTE         GROUP BY WF_NAME, FILENAME_OUT        ) WHERE  RECORDS_DIST != NVL(RECORDS_OUTBOUND,0)



select * from dba_users  where ACCOUNT_STATUS like '%%' order by 6 desc



--Create/Drop table
Drop table Session_Watcher

Create Table Session_Watcher as 
select username , schemaname , osuser ,machine , program ,sysdate as DTM from v$session where rownum <2 

truncate table Session_Watcher

select * from Session_Watcher

select * from dba_audit_trail




public class Narf {
public static void zoop(String fred, int bob) {
System.out.println(fred);
if (bob == 5) {
ping("not ");
} else {
System.out.println("!");
}
}
public static void main(String[] args) {
int bizz = 5;
int buzz = 2;
zoop("just for", bizz);
clink(2*buzz);
}
public static void clink(int fork) {
System.out.print("It's ");
zoop("breakfast ", fork) ;
}
public static void ping(String strangStrung) {
System.out.println("any " + strangStrung + "more ");
}
}
